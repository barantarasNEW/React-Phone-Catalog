{"version":3,"sources":["helpers/createChars.ts","contexts/FavoritesContext.ts","contexts/CartContext.ts","components/Loader/Loader.tsx","components/CharsList/CharList.tsx","contexts/ProductsContext.ts","components/EmptyModal/EmptyModal.tsx","components/FavButton/FavButton.tsx","components/CartButton/CartButton.tsx","helpers/searchHelper.ts","components/Card/Card.tsx","helpers/moveToTop.ts","components/Back/Back.tsx","components/CardSlider/CardSliderButt/CardSliderButt.tsx","components/CardSlider/CardSlider.tsx","api/api.ts","types/Categories.ts","hooks/useLocaleStorage.ts","components/Logo/Logo.tsx","components/Header/Navbar/constants.ts","components/Header/Navbar/Navbar.tsx","components/Header/Shopbar/constants.ts","components/Header/Shopbar/ShopbarSearch/ShopbarSearch.tsx","components/Header/Shopbar/ShopbarItemDyn/ShopbarItemDyn.tsx","contexts/MenuContext.ts","components/Header/Shopbar/Shopbar.tsx","components/Header/Header.tsx","components/Footer/Nets/constants.ts","components/Footer/Nets/Nets.tsx","components/Footer/ButtonMove/ButtonMove.tsx","components/Footer/Footer.tsx","components/BreadCrumbs/BreadCrumbs.tsx","helpers/editProductName.ts","components/Layout/constants.ts","components/Menu/Menu.tsx","components/Layout/Layout.tsx","types/Colors.ts","pages/CardDetails/CardInfo/CardInfo.tsx","pages/CardDetails/CardShow/CardShow.tsx","pages/CardDetails/CardAbout/CardAbout.tsx","pages/CardDetails/CardTechSpecs/constants.ts","pages/CardDetails/CardTechSpecs/CardTechSpecs.tsx","pages/CardDetails/CardDetails.tsx","App.tsx","index.tsx"],"names":["createChars","keys","values","map","key","index","value","FavoritesContext","createContext","favorites","setFavorite","delFavorite","CartContext","cart","addCard","delCard","changeCardCount","Loader","className","CharsList","list","classes","Array","isArray","join","ProductsContext","phones","tablets","accessories","EmptyModal","name","FavButton","product","useContext","isFavorite","useMemo","find","currCard","type","cn","active","onClick","data-cy","src","alt","buttonClasses","isAddedCard","CartButton","width","height","style","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","delete","part","append","set","chars","Card","category","phoneId","price","fullPrice","image","ram","capacity","screen","charsList","to","moveToTop","window","scrollTo","Back","history","back","CardSliderButt","idDis","img","isDis","move","CardSlider","products","title","useState","offset","setOffset","isLeftDisabled","isRightDisabled","length","transform","id","currOffset","wait","delay","Promise","resolve","setTimeout","Categories","useLocaleStorage","initialValue","storage","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","Logo","classNames","navLinks","href","linkClasses","isActive","Navbar","searchAvailableIn","ShopbarSearch","inputRef","useRef","useSearchParams","searchParams","setSearchParams","query","get","ref","onChange","e","target","placeholder","current","focus","ShopbarItemDyn","productsLength","MenuContext","isMenu","toggleMenu","Shopbar","location","useLocation","pathname","isSearchAvailable","includes","Header","footerLinks","Nets","rel","ButtonMove","Footer","BreadCrumbs","slice","split","word","toLowerCase","toUpperCase","breadAvailableIn","Menu","document","body","classList","add","remove","Layout","setPhones","setIsMenu","setFavorites","setCart","then","fetch","response","json","res","useCallback","newSaveProduct","count","currStores","cardName","filter","currStore","newCount","Provider","currIsMenu","fallback","Colors","black","rosegold","gold","silver","spacegray","green","yellow","white","purple","red","midnightgreen","coral","capacityClasses","currCapacity","colorClasses","currColor","color","CardInfo","cardDetail","capacityAvailable","priceRegular","priceDiscount","colorsAvailable","resolution","processor","namespaceId","productCard","toLocaleLowerCase","backgroundColor","currImg","CardShow","images","mainImg","setMainImg","CardAbout","description","text","CardTechSpecs","camera","zoom","cell","CardDetails","setProduct","setProductCard","loading","setLoading","useParams","availableProducts","TABLETS","ACCESSORIES","likeProduct","randoms","i","randomNum","Math","floor","random","push","num","productId","foundProduct","currProduct","finally","Home","lazy","Phones","Tablets","Accessories","Cart","Favorites","App","path","element","replace","PHONES","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.7834ac04.chunk.js","sourcesContent":["import { Char } from '../types/Char';\n\nexport const createChars = (\n  keys: string[],\n  values: (string | string[])[],\n): Char[] => (\n  keys.map((key, index) => (\n    { key, value: values[index] }\n  ))\n);\n","import { createContext } from 'react';\nimport { Product } from '../types/Product';\nimport { Store } from '../types/Store';\n\ntype Context = {\n  favorites: Store[],\n  setFavorite: (product: Product) => void;\n  delFavorite: (cardName: string) => void;\n};\n\nexport const FavoritesContext = createContext<Context>({\n  favorites: [],\n  setFavorite: () => {},\n  delFavorite: () => {},\n});\n","import { createContext } from 'react';\nimport { Product } from '../types/Product';\nimport { Store } from '../types/Store';\n\ntype Context = {\n  cart: Store[],\n  addCard: (product: Product) => void;\n  delCard: (cardName: string) => void;\n  changeCardCount: (id: number, newCount: number) => void;\n};\n\nexport const CartContext = createContext<Context>({\n  cart: [],\n  addCard: () => {},\n  delCard: () => {},\n  changeCardCount: () => {},\n});\n","import './Loader.scss';\n\nconst Loader = () => (\n  <div className=\"lds-facebook\">\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loader;\n","import './CharList.scss';\n\nimport { Char } from '../../types/Char';\n\ntype Props = {\n  list: Char[];\n  classes?: string;\n};\n\nconst CharsList: React.FC<Props> = ({ list, classes }) => (\n  <ul className={`${classes} chars`}>\n    {list.map(({ key, value }) => (\n      <li key={key} className=\"char\">\n        <span className=\"char__key\">{key}</span>\n\n        {Array.isArray(value)\n          ? (\n            <>\n              <span className=\"char__value\">\n                {value.join(', ')}\n              </span>\n            </>\n          )\n          : (\n            <span className=\"char__value\">\n              {value}\n            </span>\n          )}\n      </li>\n    ))}\n  </ul>\n);\n\nexport default CharsList;\n","import { createContext } from 'react';\nimport { Product } from '../types/Product';\n\ntype Context = {\n  phones: Product[],\n  tablets: Product[],\n  accessories: Product[],\n};\n\nexport const ProductsContext = createContext<Context>({\n  phones: [],\n  tablets: [],\n  accessories: [],\n});\n","import './EmptyModal.scss';\n\ntype Props = {\n  name?: string;\n};\n\nconst EmptyModal: React.FC<Props> = ({ name = 'Not found' }) => (\n  <div className=\"empty-modal\">\n    <span className=\"empty-modal__name\">\n      {`${name}`}\n    </span>\n  </div>\n);\n\nexport default EmptyModal;\n","import cn from 'classnames';\nimport { useMemo, useContext } from 'react';\nimport './FavButton.scss';\n\nimport { FavoritesContext } from '../../contexts/FavoritesContext';\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  product: Product;\n};\n\nconst FavButton: React.FC<Props> = ({ product: { name }, product }) => {\n  const {\n    favorites,\n    setFavorite,\n    delFavorite,\n  } = useContext(FavoritesContext);\n  const isFavorite = useMemo(() => {\n    return favorites.find(currCard => currCard.product.name === name);\n  }, [favorites, name]);\n  const onToggleHandle = () => {\n    if (isFavorite) {\n      delFavorite(name);\n    } else {\n      setFavorite(product);\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={cn(\n        'button-block fav-button',\n        { active: isFavorite },\n      )}\n      onClick={onToggleHandle}\n      data-cy=\"addToFavorite\"\n    >\n      {isFavorite\n        ? <img src=\"./icons/isFavorite.svg\" alt=\"icon\" />\n        : <img src=\"./icons/favorite.svg\" alt=\"icon\" />}\n    </button>\n  );\n};\n\nexport default FavButton;\n","import { useContext, useMemo } from 'react';\nimport cn from 'classnames';\nimport './CartButton.scss';\n\nimport { CartContext } from '../../contexts/CartContext';\nimport { Product } from '../../types/Product';\n\nconst buttonClasses = (isAddedCard: boolean) => cn(\n  'cart-button',\n  { active: isAddedCard },\n);\n\ntype Props = {\n  width?: number;\n  height?: number;\n  product: Product;\n};\n\nconst CartButton: React.FC<Props> = ({\n  width = 176,\n  height = 40,\n  product: {\n    name,\n  },\n  product,\n}) => {\n  const { cart, addCard, delCard } = useContext(CartContext);\n  const isAddedCard = useMemo(() => {\n    return cart.find(currCard => currCard.product.name === name);\n  }, [cart, name]);\n  const onToggleHandle = () => {\n    if (isAddedCard) {\n      delCard(name);\n    } else {\n      addCard(product);\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={buttonClasses(!!isAddedCard)}\n      style={{ width, height }}\n      onClick={onToggleHandle}\n    >\n      {isAddedCard\n        ? 'Added to cart'\n        : 'Add to cart'}\n    </button>\n  );\n};\n\nexport default CartButton;\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.scss';\n\nimport { Product } from '../../types/Product';\nimport { createChars } from '../../helpers/createChars';\n\nimport CharsList from '../CharsList/CharList';\nimport FavButton from '../FavButton/FavButton';\nimport CartButton from '../CartButton/CartButton';\n\nconst chars = [\n  'Screen',\n  'Capacity',\n  'RAM',\n];\n\ntype Props = {\n  product: Product;\n};\n\nconst Card: React.FC<Props> = ({\n  product: {\n    category,\n    phoneId,\n    name,\n    price,\n    fullPrice,\n    image,\n    ram,\n    capacity,\n    screen,\n  },\n  product,\n}) => {\n  const charsList = useMemo(() => {\n    return createChars(chars, [screen, capacity, ram]);\n  }, [screen, capacity, ram, createChars, chars]);\n\n  return (\n    <div className=\"card\" data-cy=\"cardsContainer\">\n      <Link to={`/${category}/${phoneId}`}>\n        <img className=\"card__img\" src={image} alt=\"product\" />\n        <h3 className=\"card__name\">\n          {name}\n        </h3>\n      </Link>\n\n      <div className=\"card__prices\">\n        <span className=\"card__price\">\n          {`$${price}`}\n        </span>\n        <span className=\"card__full-price\">\n          {`$${fullPrice}`}\n        </span>\n      </div>\n\n      <div className=\"line card__line\" />\n\n      <CharsList classes=\"card__chars\" list={charsList} />\n\n      <div className=\"card__buttons\">\n        <CartButton product={product} />\n        <FavButton product={product} />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","export const moveToTop = () => {\n  window.scrollTo(0, 0);\n};\n","import './Back.scss';\n\nconst Back = () => {\n  const onClickHandle = () => {\n    window.history.back();\n  };\n\n  return (\n    <button\n      className=\"back\"\n      onClick={onClickHandle}\n      type=\"button\"\n    >\n      <div className=\"back__icon-block\">\n        <img className=\"back__icon\" src=\"./icons/left.svg\" alt=\"icon\" />\n      </div>\n\n      <span className=\"back__name\">\n        Back\n      </span>\n    </button>\n  );\n};\n\nexport default Back;\n","import cn from 'classnames';\n\nconst buttonClasses = (idDis: boolean) => cn(\n  'button-block',\n  { 'button-dis': idDis },\n);\n\ntype Props = {\n  img: string;\n  isDis: boolean;\n  move: () => void;\n};\n\nconst CardSliderButt: React.FC<Props> = ({ img, isDis, move }) => (\n  <button\n    type=\"button\"\n    className={buttonClasses(isDis)}\n    onClick={move}\n  >\n    <img src={img} alt=\"icon\" />\n  </button>\n);\n\nexport default CardSliderButt;\n","import { useState, useMemo } from 'react';\nimport './CardSlider.scss';\n\nimport { Product } from '../../types/Product';\n\nimport Card from '../Card/Card';\nimport CardSliderButt from './CardSliderButt/CardSliderButt';\n\nconst width = 272 + 16;\nconst count = 4;\n\ntype Props = {\n  products: Product[];\n  title: string;\n};\n\nconst CardSlider: React.FC<Props> = ({ products, title }) => {\n  const [offset, setOffset] = useState(0);\n  const isLeftDisabled = offset === 0;\n  const isRightDisabled = useMemo(() => {\n    return offset === -(width * (products.length - count));\n  }, [offset, width, products, count]);\n\n  const onClickRight = () => {\n    setOffset(currOffset => currOffset - width);\n  };\n\n  const onClickLeft = () => {\n    setOffset(currOffset => currOffset + width);\n  };\n\n  return (\n    <section className=\"page__section card-slider\">\n      <div className=\"container\">\n        <div className=\"card-slider__wrapper\">\n          <h2 className=\"page__title\">\n            {title}\n          </h2>\n\n          <div\n            className=\"card-slider__list\"\n            style={{ transform: `translateX(${offset}px)` }}\n          >\n            {products.map(product => (\n              <Card key={product.id} product={product} />\n            ))}\n          </div>\n\n          <div className=\"card-slider__butts\">\n            <CardSliderButt\n              img=\"./icons/left.svg\"\n              isDis={isLeftDisabled}\n              move={onClickLeft}\n            />\n            <CardSliderButt\n              img=\"./icons/right.svg\"\n              isDis={isRightDisabled}\n              move={onClickRight}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CardSlider;\n","import { CardDetail } from '../types/CardDetail';\nimport { Product } from '../types/Product';\n\nconst API_URL = './products.json';\nconst API_URL_PRODUCT = './products/';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport const getProducts = (): Promise<Product[]> => {\n  return wait(300)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n};\n\nexport const getCardDetail = (productId: string): Promise<CardDetail> => {\n  return wait(300)\n    .then(() => fetch(`${API_URL_PRODUCT + productId}.json`))\n    .then(response => response.json());\n};\n","export enum Categories {\n  PHONES = 'phones',\n  TABLETS = 'tablets',\n  ACCESSORIES = 'accessories',\n}\n","import { useEffect, useState } from 'react';\n\nexport const useLocaleStorage = <T>(initialValue: T, key: string) => {\n  const getValue = () => {\n    const storage = localStorage.getItem(key);\n\n    if (storage) {\n      return JSON.parse(storage);\n    }\n\n    return initialValue;\n  };\n\n  const [value, setValue] = useState(getValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, setValue]);\n\n  return [value, setValue];\n};\n","import { Link } from 'react-router-dom';\n\ntype Props = {\n  classNames?: string;\n};\n\nconst Logo: React.FC<Props> = ({ classNames }) => (\n  <Link to=\"/\" className={classNames}>\n    <img src=\"./logo.svg\" alt=\"logo\" />\n  </Link>\n);\n\nexport default Logo;\n","export const navLinks = [\n  { value: 'home', href: '/' },\n  { value: 'phones', href: '/phones' },\n  { value: 'tablets', href: '/tablets' },\n  { value: 'accessories', href: '/accessories' },\n];\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport './Navbar.scss';\n\nimport { navLinks } from './constants';\n\nconst linkClasses = ({ isActive }: { isActive: boolean }) => cn(\n  'link',\n  'navbar__link',\n  { active: isActive },\n);\n\nconst Navbar = () => (\n  <nav className=\"navbar\">\n    <ul className=\"navbar__list\">\n      {navLinks.map(({ value, href }) => (\n        <li key={href} className=\"navbar__item\">\n          <NavLink className={linkClasses} to={href}>\n            {value}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n\nexport default Navbar;\n","export const searchAvailableIn = [\n  '/phones',\n  '/tablets',\n  '/accessories',\n  '/favorites',\n];\n","import './ShopbarSearch.scss';\nimport { ChangeEvent, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchWith } from '../../../../helpers/searchHelper';\n\nconst ShopbarSearch = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const onClickHandle = () => {\n    setSearchParams(\n      getSearchWith(searchParams, { query: null }),\n    );\n\n    inputRef.current?.focus();\n  };\n\n  const onChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, { query: e.target.value || null }),\n    );\n  };\n\n  return (\n    <>\n      <input\n        ref={inputRef}\n        className=\"shopbar__search\"\n        type=\"text\"\n        value={query}\n        onChange={onChangeHandle}\n        placeholder=\"Search in favorites...\"\n      />\n      {query.length\n        ? (\n          <button\n            type=\"button\"\n            onClick={onClickHandle}\n            data-cy=\"addToFavorite\"\n          >\n            <img src=\"./icons/cancel.svg\" alt=\"icon\" />\n          </button>\n        )\n        : <img src=\"./icons/search.svg\" alt=\"icon\" />}\n    </>\n  );\n};\n\nexport default ShopbarSearch;\n","import cn from 'classnames';\nimport './ShopbarItemDyn.scss';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  productsLength: number;\n  img: string;\n  to: string;\n};\n\nconst linkClasses = ({ isActive }: { isActive: boolean }) => cn(\n  'shopbar__item-dyn',\n  { active: isActive },\n);\n\nconst ShopbarItemDyn: React.FC<Props> = ({\n  productsLength,\n  img,\n  to,\n}) => (\n  <NavLink className={linkClasses} to={to}>\n    <div className=\"shopbar__item-dyn__count\">\n      {!!productsLength && (\n        <span className=\"shopbar__item-dyn__count__item\">\n          {productsLength}\n        </span>\n      )}\n      <img src={img} alt=\"icon\" />\n    </div>\n  </NavLink>\n);\n\nexport default ShopbarItemDyn;\n","import { createContext } from 'react';\n\ntype Context = {\n  isMenu?: boolean;\n  toggleMenu?: () => void;\n};\n\nexport const MenuContext = createContext<Context>({\n  isMenu: false,\n  toggleMenu: () => {},\n});\n","import { useContext, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport './Shopbar.scss';\n\nimport { FavoritesContext } from '../../../contexts/FavoritesContext';\nimport { CartContext } from '../../../contexts/CartContext';\n\nimport { searchAvailableIn } from './constants';\n\nimport ShopbarSearch from './ShopbarSearch/ShopbarSearch';\nimport ShopbarItemDyn from './ShopbarItemDyn/ShopbarItemDyn';\nimport { MenuContext } from '../../../contexts/MenuContext';\n\nconst Shopbar = () => {\n  const { favorites } = useContext(FavoritesContext);\n  const { cart } = useContext(CartContext);\n  const { isMenu, toggleMenu } = useContext(MenuContext);\n  const location = useLocation().pathname;\n  const isSearchAvailable = useMemo(() => {\n    return searchAvailableIn.includes(location);\n  }, [searchAvailableIn, location]);\n\n  return (\n    <nav className=\"shopbar\">\n      <ul className=\"shopbar__list\">\n        {isSearchAvailable && (\n          <li className=\"shopbar__item shopbar__item-search\">\n            <ShopbarSearch />\n          </li>\n        )}\n        <li className=\"shopbar__item\">\n          <ShopbarItemDyn\n            to=\"/cart\"\n            img=\"./icons/cart.svg\"\n            productsLength={cart.length}\n          />\n        </li>\n        <li className=\"shopbar__item\">\n          <ShopbarItemDyn\n            img=\"./icons/favorite.svg\"\n            to=\"/favorites\"\n            productsLength={favorites.length}\n          />\n        </li>\n        <li className=\"shopbar__item\">\n          <button\n            type=\"button\"\n            className=\"shopbar__item-menu\"\n            onClick={toggleMenu}\n          >\n            {isMenu\n              ? <FaTimes />\n              : <FaBars />}\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Shopbar;\n","import './Header.scss';\n\nimport Logo from '../Logo/Logo';\nimport Navbar from './Navbar/Navbar';\nimport Shopbar from './Shopbar/Shopbar';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"header__wrapper\">\n      <div className=\"header__left\">\n        <Logo classNames=\"header__logo\" />\n        <div className=\"header__nav\">\n          <Navbar />\n        </div>\n      </div>\n\n      <div className=\"header__right\">\n        <Shopbar />\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","export const footerLinks = [\n  { value: 'github', href: 'https://github.com/barantarasNEW' },\n  { value: 'contacts', href: '/conc' },\n  { value: 'rights', href: '/rig' },\n];\n","import './Nets.scss';\nimport { footerLinks } from './constants';\n\nconst Nets = () => (\n  <ul className=\"nets\">\n    {footerLinks.map(({ value, href }) => (\n      <li key={href} className=\"net\">\n        <a\n          className=\"link net__link\"\n          href={href}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {value}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Nets;\n","import { moveToTop } from '../../../helpers/moveToTop';\nimport './ButtonMove.scss';\n\nconst ButtonMove = () => (\n  <div className=\"button-move\">\n    <span className=\"button-move__name\">\n      Back to top\n    </span>\n\n    <button\n      type=\"button\"\n      className=\"button-block\"\n      onClick={moveToTop}\n    >\n      <img src=\"./icons/up.svg\" alt=\"icon\" />\n    </button>\n  </div>\n);\n\nexport default ButtonMove;\n","import './Footer.scss';\n\nimport Logo from '../Logo/Logo';\nimport Nets from './Nets/Nets';\nimport ButtonMove from './ButtonMove/ButtonMove';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"container\">\n      <div className=\"footer__wrapper\">\n        <Logo classNames=\"footer__logo\" />\n        <Nets />\n        <ButtonMove />\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import { Link, NavLink, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\nimport './BreadCrumbs.scss';\n\nimport { editProductName } from '../../helpers/editProductName';\n\nconst linkClasses = (value: string, location: string[]) => cn(\n  'bread-crumbs__link',\n  { active: location.length > 1 && location[0] === value },\n);\n\nconst BreadCrumbs = () => {\n  const location = useLocation().pathname.slice(1).split('/');\n\n  return (\n    <div className=\"bread-crumbs\">\n      <div className=\"container\">\n        <div className=\"bread-crumbs__wrapper\">\n          <Link className=\"bread-crumbs__home\" to=\"/\">\n            <img src=\"./icons/home.svg\" alt=\"icon\" />\n          </Link>\n\n          {location.map(value => (\n            <NavLink\n              key={value}\n              to={`/${value}`}\n              className={() => linkClasses(value, location)}\n            >\n              <img src=\"./icons/rightDis.svg\" alt=\"icon\" />\n              {editProductName(value)}\n            </NavLink>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BreadCrumbs;\n","export const editProductName = (name: string) => {\n  return name\n    .split('-')\n    .map(word => {\n      return word.toLowerCase().includes('gb')\n        ? word.toUpperCase()\n        : word;\n    }).join(' ');\n};\n","export const breadAvailableIn = [\n  '/',\n  '/cart',\n];\n","import { useContext, useEffect } from 'react';\nimport cn from 'classnames';\nimport './Menu.scss';\n\nimport Navbar from '../Header/Navbar/Navbar';\nimport { MenuContext } from '../../contexts/MenuContext';\n\nconst Menu = () => {\n  const { isMenu } = useContext(MenuContext);\n\n  useEffect(() => {\n    if (isMenu) {\n      document.body.classList.add('page__body--menu');\n    } else {\n      document.body.classList.remove('page__body--menu');\n    }\n  }, [isMenu]);\n\n  return (\n    <div className={cn('menu', { active: isMenu })}>\n      <Navbar />\n    </div>\n  );\n};\n\nexport default Menu;\n","import {\n  Suspense,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport './Layout.scss';\nimport { Outlet, useLocation } from 'react-router';\n\nimport { Product } from '../../types/Product';\nimport { getProducts } from '../../api/api';\nimport { useLocaleStorage } from '../../hooks/useLocaleStorage';\n\nimport { ProductsContext } from '../../contexts/ProductsContext';\nimport { FavoritesContext } from '../../contexts/FavoritesContext';\nimport { CartContext } from '../../contexts/CartContext';\n\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport BreadCrumbs from '../BreadCrumbs/BreadCrumbs';\nimport Loader from '../Loader/Loader';\nimport { Store } from '../../types/Store';\nimport { breadAvailableIn } from './constants';\nimport Menu from '../Menu/Menu';\nimport { MenuContext } from '../../contexts/MenuContext';\n\nconst Layout = () => {\n  const [phones, setPhones] = useState<Product[]>([]);\n  const [tablets] = useState<Product[]>([]);\n  const [accessories] = useState<Product[]>([]);\n  const [isMenu, setIsMenu] = useState(false);\n  const location = useLocation().pathname;\n  const isSearchAvailable = !breadAvailableIn.includes(location);\n  const [favorites, setFavorites] = useLocaleStorage<Store[]>(\n    [],\n    'favorites',\n  );\n  const [cart, setCart] = useLocaleStorage<Store[]>(\n    [],\n    'cart',\n  );\n\n  useEffect(() => {\n    getProducts()\n      .then(res => setPhones(res));\n  }, []);\n\n  const setFavorite = useCallback((product: Product) => {\n    const newSaveProduct = {\n      product: { ...product },\n      count: 1,\n      id: product.id,\n    };\n\n    setFavorites((currStores: Store[]) => (\n      [...currStores, newSaveProduct]\n    ));\n  }, [favorites]);\n\n  const delFavorite = useCallback((cardName: string) => {\n    setFavorites((currStores: Store[]) => currStores\n      .filter(currStore => currStore.product.name !== cardName));\n  }, [favorites]);\n\n  const addCard = useCallback((product: Product) => {\n    const newSaveProduct = {\n      product: { ...product },\n      count: 1,\n      id: product.id,\n    };\n\n    setCart((currStores: Store[]) => ([...currStores, newSaveProduct]));\n  }, [cart]);\n\n  const delCard = useCallback((cardName: string) => {\n    setCart((currStores: Store[]) => currStores\n      .filter(currStore => currStore.product.name !== cardName));\n  }, []);\n\n  const changeCardCount = useCallback((id: number, newCount: number) => {\n    setCart((currStores: Store[]) => {\n      return currStores.map(currStore => {\n        if (currStore.id === id) {\n          return { ...currStore, count: currStore.count + newCount };\n        }\n\n        return currStore;\n      });\n    });\n  }, [cart]);\n\n  const toggleMenu = () => {\n    setIsMenu(currIsMenu => !currIsMenu);\n  };\n\n  useEffect(() => {\n    if (isMenu) {\n      setIsMenu(false);\n    }\n  }, [location]);\n\n  return (\n    <FavoritesContext.Provider value={{\n      favorites,\n      setFavorite,\n      delFavorite,\n    }}\n    >\n      <CartContext.Provider value={{\n        cart,\n        addCard,\n        delCard,\n        changeCardCount,\n      }}\n      >\n        <MenuContext.Provider value={{ toggleMenu }}>\n          <Header />\n        </MenuContext.Provider>\n\n        <MenuContext.Provider value={{ isMenu }}>\n          <Menu />\n        </MenuContext.Provider>\n\n        <Suspense fallback={<Loader />}>\n          {isSearchAvailable && (\n            <BreadCrumbs />\n          )}\n          <main>\n            <ProductsContext.Provider value={{\n              phones,\n              tablets,\n              accessories,\n            }}\n            >\n              <Outlet />\n            </ProductsContext.Provider>\n          </main>\n          <Footer />\n        </Suspense>\n      </CartContext.Provider>\n    </FavoritesContext.Provider>\n  );\n};\n\nexport default Layout;\n","export interface ColorsType {\n  [key: string]: string;\n}\n\nexport const Colors: ColorsType = {\n  black: '#000',\n  rosegold: '#b76e79',\n  gold: '#FFD700',\n  silver: '#C0C0C0',\n  spacegray: '#717378',\n  green: '#008000',\n  yellow: '#FFFF00',\n  white: '#fff',\n  purple: '#800080',\n  red: '#FF0000',\n  midnightgreen: '#004953',\n  coral: '#FF7F50',\n};\n","import './CardInfo.scss';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport CharsList from '../../../components/CharsList/CharList';\nimport FavButton from '../../../components/FavButton/FavButton';\nimport { createChars } from '../../../helpers/createChars';\nimport { CardDetail } from '../../../types/CardDetail';\nimport { Colors } from '../../../types/Colors';\nimport CartButton from '../../../components/CartButton/CartButton';\nimport { Product } from '../../../types/Product';\n\nconst charsList = ['Screen', 'Resolution', 'Processor', 'RAM'];\n\nconst capacityClasses = (currCapacity: string, capacity: string) => cn(\n  'card-info__capacity__item',\n  { 'card-info__capacity-active': currCapacity === capacity },\n);\n\nconst colorClasses = (currColor: string, color: string) => cn(\n  'card-info__colors__item',\n  { 'card-info__colors-active': currColor === color },\n);\n\ntype Props = {\n  cardDetail: CardDetail;\n  productCard: Product;\n};\n\nconst CardInfo: React.FC<Props> = ({\n  cardDetail: {\n    capacityAvailable,\n    capacity,\n    priceRegular,\n    priceDiscount,\n    colorsAvailable,\n    color,\n    screen,\n    resolution,\n    processor,\n    ram,\n    namespaceId,\n  },\n  productCard,\n}) => {\n  const chars = createChars(\n    charsList,\n    [screen, resolution, processor, ram],\n  );\n\n  return (\n    <div className=\"card-info\">\n      <div className=\"card-info__colors\">\n        <span className=\"card-info__colors__name\">\n          Available colors\n        </span>\n        <ul className=\"card-info__colors__list\">\n          {colorsAvailable.map(currColor => (\n            <li\n              key={currColor}\n              className={colorClasses(currColor, color)}\n            >\n              <Link\n                to={`/${productCard.category}/${namespaceId}-${capacity.toLocaleLowerCase()}-${currColor}`}\n                style={{ backgroundColor: Colors[currColor] }}\n                className=\"card-info__colors__link\"\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"line card-info__line\" />\n\n      <div className=\"card-info__capacity\">\n        <span className=\"card-info__capacity__name\">\n          Select capacity\n        </span>\n        <ul className=\"card-info__capacity__list\">\n          {capacityAvailable.map(currCapacity => (\n            <li\n              key={currCapacity}\n              className={capacityClasses(currCapacity, capacity)}\n            >\n              <Link\n                className=\"card-info__capacity__link\"\n                to={`/${productCard.category}/${namespaceId}-${currCapacity.toLowerCase()}-${color}`}\n              >\n                {currCapacity}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"line card-info__line\" />\n\n      <div className=\"card-info__prices\">\n        <span className=\"card-info__price\">\n          {`$${priceDiscount}`}\n        </span>\n        <span className=\"card-info__full-price\">\n          {`$${priceRegular}`}\n        </span>\n      </div>\n\n      <div className=\"card-info__buttons\">\n        <CartButton product={productCard} />\n        <FavButton product={productCard} />\n      </div>\n\n      <CharsList list={chars} classes=\"card-info__chars\" />\n    </div>\n  );\n};\n\nexport default CardInfo;\n","import cn from 'classnames';\nimport { useEffect, useState } from 'react';\nimport './CardShow.scss';\n\nconst classes = (img: string, currImg: string) => cn(\n  'card-show__button',\n  { active: img === currImg },\n);\n\ntype Props = {\n  images: string[];\n};\n\nconst CardShow: React.FC<Props> = ({ images }) => {\n  const [mainImg, setMainImg] = useState<string | null>(null);\n\n  useEffect(() => {\n    setMainImg(images[0]);\n  }, [images]);\n\n  if (!mainImg) {\n    return null;\n  }\n\n  return (\n    <div className=\"card-show\">\n      <ul className=\"card-show__list\">\n        {images.map(img => (\n          <li key={img} className=\"card-show__item\">\n            <button\n              type=\"button\"\n              className={classes(mainImg, img)}\n              onClick={() => setMainImg(img)}\n            >\n              <img className=\"card-show__img\" src={img} alt=\"product\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <img className=\"card-show__main\" src={mainImg} alt=\"product\" />\n    </div>\n  );\n};\n\nexport default CardShow;\n","import './CardAbout.scss';\nimport { CardDescription } from '../../../types/CardDescription';\n\ntype Props = {\n  description: CardDescription[];\n};\n\nconst CardAbout: React.FC<Props> = ({ description }) => (\n  <div className=\"card-about\">\n    <h3 className=\"card-about__title\">About</h3>\n\n    <div className=\"line card-about__line\" />\n\n    <div className=\"card-about__info__list\">\n      {description.map(({ title, text }) => (\n        <div key={title} className=\"card-about__info\">\n          <h4 className=\"card-about__info__title\">\n            {title}\n          </h4>\n          <p className=\"card-about__info__text\">\n            {text}\n          </p>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default CardAbout;\n","export const charsList = [\n  'Screen',\n  'Resolution',\n  'Processor',\n  'RAM',\n  'Built in memory',\n  'Camera',\n  'Zoom',\n  'Cell',\n];\n","import './CardTechSpecs.scss';\nimport CharsList from '../../../components/CharsList/CharList';\nimport { createChars } from '../../../helpers/createChars';\nimport { CardDetail } from '../../../types/CardDetail';\nimport { charsList } from './constants';\n\ntype Props = {\n  cardDetail: CardDetail;\n};\n\nconst CardTechSpecs: React.FC<Props> = ({\n  cardDetail: {\n    screen,\n    resolution,\n    processor,\n    ram,\n    camera,\n    zoom,\n    cell,\n    capacity,\n  },\n}) => {\n  const chars = createChars(\n    charsList,\n    [screen, resolution, processor, ram, capacity, camera, zoom, cell],\n  );\n\n  return (\n    <div className=\"card-tech-specs\">\n      <h3 className=\"card-tech-specs__title\">\n        Tech specs\n      </h3>\n\n      <div className=\"line card-tech-specs__line\" />\n\n      <CharsList classes=\"card-tech-specs\" list={chars} />\n    </div>\n  );\n};\n\nexport default CardTechSpecs;\n","import './CardDetail.scss';\nimport {\n  useState,\n  useEffect,\n  useMemo,\n  useContext,\n} from 'react';\nimport { useParams } from 'react-router';\n\nimport { getCardDetail } from '../../api/api';\n\nimport { ProductsContext } from '../../contexts/ProductsContext';\n\nimport { CardDetail } from '../../types/CardDetail';\nimport { Product } from '../../types/Product';\nimport { Categories } from '../../types/Categories';\n\nimport CardInfo from './CardInfo/CardInfo';\nimport CardShow from './CardShow/CardShow';\nimport Loader from '../../components/Loader/Loader';\nimport CardAbout from './CardAbout/CardAbout';\nimport CardTechSpecs from './CardTechSpecs/CardTechSpecs';\nimport CardSlider from '../../components/CardSlider/CardSlider';\nimport Back from '../../components/Back/Back';\nimport EmptyModal from '../../components/EmptyModal/EmptyModal';\n\ntype Props = {\n  category: Categories;\n};\n\nconst CardDetails: React.FC<Props> = ({ category }) => {\n  const [product, setProduct] = useState<CardDetail | null>(null);\n  const [productCard, setProductCard] = useState<Product | null>(null);\n  const [loading, setLoading] = useState(true);\n  const { id } = useParams();\n  const products = useContext(ProductsContext);\n  const availableProducts = useMemo(() => {\n    if (category === Categories.TABLETS) {\n      return products.tablets;\n    }\n\n    if (category === Categories.ACCESSORIES) {\n      return products.accessories;\n    }\n\n    return products.phones;\n  }, [products, category]);\n\n  const likeProduct = useMemo(() => {\n    const randoms: number[] = [];\n\n    for (let i = 0; i < 8; i += 1) {\n      const randomNum = Math.floor(Math.random() * availableProducts.length);\n\n      if (!randoms.includes(randomNum)) {\n        randoms.push(randomNum);\n      } else {\n        i -= 1;\n      }\n    }\n\n    return [...randoms.map(num => (\n      availableProducts[num]\n    ))];\n  }, [availableProducts, id]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (id) {\n      getCardDetail(id)\n        .then(res => setProduct(res))\n        .then(() => {\n          const foundProduct = availableProducts\n            .find(currProduct => currProduct.phoneId === id) || null;\n\n          setProductCard(foundProduct);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [id, availableProducts]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!product || !productCard) {\n    return <EmptyModal />;\n  }\n\n  return (\n    <section className=\"page__section card-details\">\n      <div className=\"container\">\n        <Back />\n\n        <h2 className=\"page__title card-details__title\">\n          {product.name}\n        </h2>\n\n        <div className=\"card-details__main\">\n          <CardShow images={product.images} />\n\n          <CardInfo\n            cardDetail={product}\n            productCard={productCard}\n          />\n        </div>\n\n        <div className=\"card-details__detail\">\n          <CardAbout description={product.description} />\n\n          <CardTechSpecs cardDetail={product} data-cy=\"productDescription\" />\n        </div>\n      </div>\n\n      <CardSlider title=\"You may also like\" products={likeProduct} />\n    </section>\n  );\n};\n\nexport default CardDetails;\n","import { Suspense, lazy } from 'react';\nimport { Navigate, Route, Routes } from 'react-router';\nimport Layout from './components/Layout/Layout';\nimport Loader from './components/Loader/Loader';\nimport CardDetails from './pages/CardDetails/CardDetails';\nimport { Categories } from './types/Categories';\nimport EmptyModal from './components/EmptyModal/EmptyModal';\n\nconst Home = lazy(() => import('./pages/Home/Home'));\nconst Phones = lazy(() => import('./pages/Phones/Phones'));\nconst Tablets = lazy(() => import('./pages/Tablets/Tablets'));\nconst Accessories = lazy(() => import('./pages/Accessories/Accessories'));\nconst Cart = lazy(() => import('./pages/Cart/Cart'));\nconst Favorites = lazy(() => import('./pages/Favorites/Favorites'));\n\nconst App = () => (\n  <Suspense fallback={<Loader />}>\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<Home />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/phones\">\n          <Route index element={<Phones />} />\n          <Route\n            path=\":id\"\n            element={<CardDetails category={Categories.PHONES} />}\n          />\n        </Route>\n        <Route path=\"/tablets\">\n          <Route index element={<Tablets />} />\n          <Route\n            path=\":id\"\n            element={<CardDetails category={Categories.TABLETS} />}\n          />\n        </Route>\n        <Route path=\"/accessories\">\n          <Route index element={<Accessories />} />\n          <Route\n            path=\":id\"\n            element={<CardDetails category={Categories.ACCESSORIES} />}\n          />\n        </Route>\n        <Route path=\"/cart\" element={<Cart />} />\n        <Route path=\"/favorites\" element={<Favorites />} />\n        <Route path=\"*\" element={<EmptyModal />} />\n      </Route>\n    </Routes>\n  </Suspense>\n);\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nconst root = createRoot(document.getElementById('root') as HTMLElement);\n\nroot.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n);\n"],"sourceRoot":""}