{"version":3,"sources":["pages/Cart/CartItem/constants.ts","pages/Cart/CartItem/CartItem.tsx","components/Modal/Modal.tsx","pages/Cart/CartTotal/CartTotal.tsx","pages/Cart/Cart.tsx"],"names":["countButton","buttonClasses","cond","cn","CartItem","name","image","delCard","price","category","phoneId","count","id","changeCardCount","onChangeCounter","num","className","type","onClick","data-cy","src","alt","to","Modal","CartTotal","totalPrice","visibleCartLength","useState","isActiveModal","setIsActiveModal","useEffect","setTimeout","Cart","useContext","CartContext","cart","useMemo","reduce","prev","next","product","Back","length","TransitionGroup","map","CSSTransition","timeout","classNames","EmptyModal"],"mappings":"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","file":"static/js/7.61c21f3c.chunk.js","sourcesContent":["export const countButton = {\n  max: 100,\n  min: 1,\n};\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport './CartItem.scss';\n\nimport { countButton } from './constants';\n\nconst buttonClasses = (cond: boolean) => cn(\n  'button-block', { 'button-dis': cond },\n);\n\ntype Props = {\n  phoneId: string;\n  id: number;\n  name: string;\n  image: string;\n  price: number;\n  category: string;\n  count: number;\n  delCard: (name: string) => void;\n  changeCardCount: (id: number, newCount: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({\n  name,\n  image,\n  delCard,\n  price,\n  category,\n  phoneId,\n  count,\n  id,\n  changeCardCount,\n}) => {\n  const onChangeCounter = (num: number) => {\n    changeCardCount(id, num);\n  };\n\n  return (\n    <li className=\"cart-item\">\n      <button\n        type=\"button\"\n        className=\"cart-item__cancel\"\n        onClick={() => delCard(name)}\n        data-cy=\"cartDeleteButton\"\n      >\n        <img src=\"./icons/cancelDis.svg\" alt=\"icon\" />\n      </button>\n\n      <Link\n        className=\"cart-item__link\"\n        to={`/${category}/${phoneId}`}\n      >\n        <img className=\"cart-item__img\" src={image} alt=\"product\" />\n\n        <h3 className=\"cart-item__name\">\n          {name}\n        </h3>\n      </Link>\n\n      <div className=\"cart-item__count-block\">\n        <button\n          type=\"button\"\n          className={buttonClasses(count === countButton.min)}\n          onClick={() => onChangeCounter(-1)}\n        >\n          <img src=\"./icons/minus.svg\" alt=\"icon\" />\n        </button>\n        <span\n          className=\"cart-item__count\"\n          data-cy=\"productQauntity\"\n        >\n          {count}\n        </span>\n        <button\n          type=\"button\"\n          className={buttonClasses(count === countButton.max)}\n          onClick={() => onChangeCounter(1)}\n        >\n          <img src=\"./icons/plus.svg\" alt=\"icon\" />\n        </button>\n      </div>\n\n      <span className=\"cart-item__price\">\n        {`$${price}`}\n      </span>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import './Modal.scss';\n\nconst Modal = () => (\n  <div className=\"modal\">\n    Not implemented yet\n  </div>\n);\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport './CartTotal.scss';\n\nimport Modal from '../../../components/Modal/Modal';\n\ntype Props = {\n  totalPrice: number;\n  visibleCartLength: number;\n};\n\nconst CartTotal: React.FC<Props> = ({\n  totalPrice,\n  visibleCartLength,\n}) => {\n  const [isActiveModal, setIsActiveModal] = useState(false);\n\n  useEffect(() => {\n    if (isActiveModal) {\n      setTimeout(() => {\n        setIsActiveModal(false);\n      }, 3000);\n    }\n  }, [isActiveModal]);\n\n  const onClickHandle = () => {\n    setIsActiveModal(true);\n  };\n\n  return (\n    <>\n      {isActiveModal && (\n        <Modal />\n      )}\n\n      <div className=\"cart-total\">\n        <span className=\"cart-total__price\">\n          {`$${totalPrice}`}\n        </span>\n\n        <span className=\"cart-total__for\">\n          {`Total for ${visibleCartLength} items`}\n        </span>\n\n        <div className=\"line cart-total__line\" />\n\n        <button\n          className=\"cart-total__checkout\"\n          type=\"button\"\n          onClick={onClickHandle}\n        >\n          Checkout\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default CartTotal;\n","import { useContext, useMemo } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './Cart.scss';\n\nimport { CartContext } from '../../contexts/CartContext';\n\nimport CartItem from './CartItem/CartItem';\nimport CartTotal from './CartTotal/CartTotal';\nimport Back from '../../components/Back/Back';\nimport EmptyModal from '../../components/EmptyModal/EmptyModal';\n\nconst Cart = () => {\n  const { cart, delCard, changeCardCount } = useContext(CartContext);\n\n  const totalPrice = useMemo(() => {\n    return cart\n      .reduce((prev, next) => (prev + next.product.price) * next.count, 0);\n  }, [cart]);\n\n  return (\n    <section className=\"page__section cart\">\n      <div className=\"container\">\n        <Back />\n\n        <h3 className=\"page__title\">Cart</h3>\n\n        {!cart.length\n          ? <EmptyModal name=\"Your cart is empty\" />\n          : (\n            <div className=\"cart__flex\">\n              <ul>\n                <TransitionGroup className=\"cart__list\">\n                  {cart.map(({\n                    product: {\n                      name,\n                      image,\n                      price,\n                      phoneId,\n                      category,\n                    },\n                    count,\n                    id,\n                  }) => (\n                    <CSSTransition\n                      key={name}\n                      timeout={500}\n                      classNames=\"item\"\n                    >\n                      <CartItem\n                        phoneId={phoneId}\n                        category={category}\n                        name={name}\n                        image={image}\n                        price={price}\n                        delCard={delCard}\n                        count={count}\n                        id={id}\n                        changeCardCount={changeCardCount}\n                      />\n                    </CSSTransition>\n                  ))}\n                </TransitionGroup>\n              </ul>\n\n              {!!cart.length && (\n                <CartTotal\n                  totalPrice={totalPrice}\n                  visibleCartLength={cart.length}\n                />\n              )}\n            </div>\n          )}\n      </div>\n    </section>\n  );\n};\n\nexport default Cart;\n"],"sourceRoot":""}