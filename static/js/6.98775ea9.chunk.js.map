{"version":3,"sources":["pages/Cart/CartItem/constants.ts","pages/Cart/CartItem/CartItem.tsx","components/Modal/Modal.tsx","pages/Cart/CartTotal/CartTotal.tsx","pages/Cart/Cart.tsx"],"names":["countButton","buttonClasses","cond","cn","CartItem","_ref","name","image","delCard","price","category","phoneId","count","id","changeCardCount","onChangeCounter","num","_jsxs","className","children","_jsx","type","onClick","src","alt","Link","to","concat","Modal","CartTotal","totalPrice","visibleCartLength","_useState","useState","_useState2","_slicedToArray","isActiveModal","setIsActiveModal","useEffect","setTimeout","_Fragment","Cart","_useContext","useContext","CartContext","cart","useMemo","reduce","prev","next","product","Back","length","TransitionGroup","map","_ref$product","CSSTransition","timeout","classNames","EmptyModal"],"mappings":"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","file":"static/js/6.98775ea9.chunk.js","sourcesContent":["export const countButton = {\n  max: 100,\n  min: 1,\n};\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport './CartItem.scss';\n\nimport { countButton } from './constants';\n\nconst buttonClasses = (cond: boolean) => cn(\n  'button-block', { 'button-dis': cond },\n);\n\ntype Props = {\n  phoneId: string;\n  id: number;\n  name: string;\n  image: string;\n  price: number;\n  category: string;\n  count: number;\n  delCard: (name: string) => void;\n  changeCardCount: (id: number, newCount: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({\n  name,\n  image,\n  delCard,\n  price,\n  category,\n  phoneId,\n  count,\n  id,\n  changeCardCount,\n}) => {\n  const onChangeCounter = (num: number) => {\n    changeCardCount(id, num);\n  };\n\n  return (\n    <li className=\"cart-item\">\n      <button\n        type=\"button\"\n        className=\"cart-item__cancel\"\n        onClick={() => delCard(name)}\n        data-cy=\"cartDeleteButton\"\n      >\n        <img src=\"./icons/cancelDis.svg\" alt=\"icon\" />\n      </button>\n\n      <Link\n        className=\"cart-item__link\"\n        to={`/${category}/${phoneId}`}\n      >\n        <img className=\"cart-item__img\" src={image} alt=\"product\" />\n\n        <h3 className=\"cart-item__name\">\n          {name}\n        </h3>\n      </Link>\n\n      <div className=\"cart-item__count-block\">\n        <button\n          type=\"button\"\n          className={buttonClasses(count === countButton.min)}\n          onClick={() => onChangeCounter(-1)}\n        >\n          <img src=\"./icons/minus.svg\" alt=\"icon\" />\n        </button>\n        <span\n          className=\"cart-item__count\"\n          data-cy=\"productQauntity\"\n        >\n          {count}\n        </span>\n        <button\n          type=\"button\"\n          className={buttonClasses(count === countButton.max)}\n          onClick={() => onChangeCounter(1)}\n        >\n          <img src=\"./icons/plus.svg\" alt=\"icon\" />\n        </button>\n      </div>\n\n      <span className=\"cart-item__price\">\n        {`$${price}`}\n      </span>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import './Modal.scss';\n\nconst Modal = () => (\n  <div className=\"modal\">\n    Not implemented yet\n  </div>\n);\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport './CartTotal.scss';\n\nimport Modal from '../../../components/Modal/Modal';\n\ntype Props = {\n  totalPrice: number;\n  visibleCartLength: number;\n};\n\nconst CartTotal: React.FC<Props> = ({\n  totalPrice,\n  visibleCartLength,\n}) => {\n  const [isActiveModal, setIsActiveModal] = useState(false);\n\n  useEffect(() => {\n    if (isActiveModal) {\n      setTimeout(() => {\n        setIsActiveModal(false);\n      }, 3000);\n    }\n  }, [isActiveModal]);\n\n  const onClickHandle = () => {\n    setIsActiveModal(true);\n  };\n\n  return (\n    <>\n      {isActiveModal && (\n        <Modal />\n      )}\n\n      <div className=\"cart-total\">\n        <span className=\"cart-total__price\">\n          {`$${totalPrice}`}\n        </span>\n\n        <span className=\"cart-total__for\">\n          {`Total for ${visibleCartLength} items`}\n        </span>\n\n        <div className=\"line cart-total__line\" />\n\n        <button\n          className=\"btn cart-total__checkout\"\n          type=\"button\"\n          onClick={onClickHandle}\n        >\n          Checkout\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default CartTotal;\n","import { useContext, useMemo } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './Cart.scss';\n\nimport { CartContext } from '../../contexts/CartContext';\n\nimport CartItem from './CartItem/CartItem';\nimport CartTotal from './CartTotal/CartTotal';\nimport Back from '../../components/Back/Back';\nimport EmptyModal from '../../components/EmptyModal/EmptyModal';\n\nconst Cart = () => {\n  const { cart, delCard, changeCardCount } = useContext(CartContext);\n\n  const totalPrice = useMemo(() => {\n    return cart\n      .reduce((prev, next) => (prev + next.product.price) * next.count, 0);\n  }, [cart]);\n\n  return (\n    <section className=\"page__section cart\">\n      <div className=\"container\">\n        <Back />\n\n        <h3 className=\"page__title\">Cart</h3>\n\n        {!cart.length\n          ? <EmptyModal name=\"Your cart is empty\" />\n          : (\n            <div className=\"cart__flex\">\n              <ul>\n                <TransitionGroup className=\"cart__list\">\n                  {cart.map(({\n                    product: {\n                      name,\n                      image,\n                      price,\n                      phoneId,\n                      category,\n                    },\n                    count,\n                    id,\n                  }) => (\n                    <CSSTransition\n                      key={name}\n                      timeout={500}\n                      classNames=\"item\"\n                    >\n                      <CartItem\n                        phoneId={phoneId}\n                        category={category}\n                        name={name}\n                        image={image}\n                        price={price}\n                        delCard={delCard}\n                        count={count}\n                        id={id}\n                        changeCardCount={changeCardCount}\n                      />\n                    </CSSTransition>\n                  ))}\n                </TransitionGroup>\n              </ul>\n\n              {!!cart.length && (\n                <CartTotal\n                  totalPrice={totalPrice}\n                  visibleCartLength={cart.length}\n                />\n              )}\n            </div>\n          )}\n      </div>\n    </section>\n  );\n};\n\nexport default Cart;\n"],"sourceRoot":""}